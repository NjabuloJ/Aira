const util = require('util');
const fs = require('fs-extra');
const { fana } = require(__dirname + "/../njabulo/fana");
const { format } = require(__dirname + "/../njabulo/mesfonctions");
const os = require("os");
const moment = require("moment-timezone");
const s = require(__dirname + "/../set");

fana({ nomCom: "lana", categorie: "General" }, async (dest, zk, commandeOptions) => {
    let { ms, repondre, prefixe, nomAuteurMessage, mybotpic } = commandeOptions;
    let { cm } = require(__dirname + "/../njabulo//fana");
    var coms = {};
    var mode = s.MODE.toLowerCase() !== "yes" ? "private" : "public";

    cm.map(async (com) => {
        if (!coms[com.categorie]) coms[com.categorie] = [];
        coms[com.categorie].push(com.nomCom);
    });

    moment.tz.setDefault("Africa/Nairobi");
    const temps = moment().format('HH:mm:ss');
    const date = moment().format('DD/MM/YYYY');

    // Generate greeting based on time of day
    const hour = moment().hour();
    let greeting = "Good Morning";
    if (hour >= 12 && hour < 18) {
        greeting = "Good afternnon!";
    } else if (hour >= 18) {
        greeting = "Good Everning!";
    } else if (hour >= 22 || hour < 5) {
        greeting = "Good Night üåå";
    }

    let infoMsg = `
*‚ï≠‚îÄ‚ùñ ìÜ© ü¶ã ìÜ™ ‚ùñ‚îÄ‚ïÆ*
     *Alec-Jb*
*‚ï∞‚îÄ‚ùñ ìÜ© ü¶ã ìÜ™ ‚ùñ‚îÄ‚ïØ* 
*‚ï≠‚îÄ‚ùñ*
*‚îãüïµÔ∏è  ô·¥è·¥õ …¥·¥Ä·¥ç·¥á : …¥·¥ä·¥Ä ô·¥ú ü·¥è ·¥ä ô*
*‚îãüìÖ ·¥Ö·¥Ä·¥õ·¥á: ${date}*
*‚îã‚è∞ ·¥õ…™·¥ç·¥á: ${temps}*
*‚îãü´Çhallo: ${greeting}*
*‚îãüìü·¥ò ü·¥ú…¢…™…¥s ·¥Ñ·¥ç·¥Ö
*‚ï∞‚îÄ‚ùñ*

> ùêÇùêÄùêíùêÑùêòùêëùêáùêéùêÉùêÑùêí ùêìùêÑùêÇùêá\n${readmore}`;
    
    
let menuMsg = `

 *ùêÄùêïùêÄùêàùêãùêÄùêÅùêãùêÑ ùêÇùêéùêåùêåùêÄùêçùêÉùêí*`;

    for (const cat in coms) {
        menuMsg += `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú£ *${cat}* ‚ú£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄÔ∏é‚ä∑‚ä∑`;
        for (const cmd of coms[cat]) {
            menuMsg += `
‚îÇ‚ùç‚îÇ ${cmd}`;
        }
        menuMsg += `
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏‚ñ∏ \n`
    }

    menuMsg += `> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ñ·¥Äs·¥á è Ä ú·¥è·¥Ö·¥ás ·¥õ·¥á·¥Ñ ú
`;

   var lien = mybotpic();

   if (lien.match(/\.(mp4|gif)$/i)) {
    try {
        zk.sendMessage(dest, {
      image: { url: imageUrl },
      text: infoMsg + menuMsg,
      contextInfo: {
       footer: "*Njabulo Jb*, developed by Njabulo",
        gifPlayback: true,
        externalAdReply: {
          title: "Alec-Jb",
          body: "public bot",
          mediaType: 1,
          thumbnailUrl: "https://files.catbox.moe/2d2gvj.jpg",
         sourceUrl: "https://github.com/NjabuloJ/Njabulo-Jb",
         renderLargerThumbnail: true,
         showAdAttribution: true,
        }
      }
    }, { quoted: ms });
    }
    catch (e) {
        console.log("ü•µü•µ Menu erreur " + e);
        repondre("ü•µü•µ Menu erreur " + e);
    }
} 
// V√©rification pour .jpeg ou .png
else if (lien.match(/\.(jpeg|png|jpg)$/i)) {
    try {
        zk.sendMessage(dest, {
     image: { url: imageUrl },
      text: infoMsg + menuMsg,
      contextInfo: {
        footer: "*Njabulo_Jb*, developed by Njabulo",
        externalAdReply: {
          title: "Alec-Jb",
          body: "public bot",
          mediaType: 1,
          thumbnailUrl: "https://files.catbox.moe/2d2gvj.jpg",
         sourceUrl: "https://github.com/NjabuloJ/Njabulo-Jb",
        renderLargerThumbnail: true,
         showAdAttribution: true,
        }
      }
    }, { quoted: ms });
      }
    catch (e) {
        console.log("ü•µü•µ Menu erreur " + e);
        repondre("ü•µü•µ Menu erreur " + e);
    }
} 
else {
    zk.sendMessage(dest, {
   image: { url: imageUrl },
      text: infoMsg + menuMsg,
     footer: "*Njabulo Jb*, developed by Njabulo",
     gifPlayback: true,
      contextInfo: {
        externalAdReply: {
          title: "Alec-Jb",
          body: "public bot",
          mediaType: 1,
          thumbnailUrl: "https://files.catbox.moe/2d2gvj.jpg",
         sourceUrl: "https://github.com/NjabuloJ/Njabulo-Jb",
        renderLargerThumbnail: true,
         showAdAttribution: true,
        }
      }
    }, { quoted: ms });
    
}

});

